name: CI Pipeline

on:
  pull_request:
    branches: [ main ]

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  build:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm ci

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: npm ci
      - name: Unit tests
        run: npm test || echo "Unit tests failed"

  sast:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      sast_passed: ${{ steps.sast_check.outputs.sast_passed }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: npm ci
      - id: sast_check
        run: |
          if npm audit --audit-level=high; then
            echo "sast_passed=true" >> $GITHUB_OUTPUT
          else
            echo "sast_passed=false" >> $GITHUB_OUTPUT
            echo "SAST failed"
          fi

  build_image:
    runs-on: ubuntu-latest
    needs: sast
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t webapp:${{ github.sha }} .

  trivy_scan:
    runs-on: ubuntu-latest
    needs: build_image
    outputs:
      trivy_passed: ${{ steps.scan.outcome == 'success' && 'true' || 'false' }}
    steps:
      - uses: actions/checkout@v4
      - name: Trivy Image Scan
        id: scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: webapp:${{ github.sha }}
          format: table
          exit-code: "1"
          vuln-type: "os,library"
          severity: "HIGH,CRITICAL"
        continue-on-error: true

  push_dockerhub:
    runs-on: ubuntu-latest
    needs: [sast, trivy_scan]
    if: needs.sast.outputs.sast_passed == 'true' && needs.trivy_scan.outputs.trivy_passed == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: DockerHub login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Push Docker image
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/webapp
          docker tag webapp:${{ github.sha }} $IMAGE:${{ github.sha }}
          docker push $IMAGE:${{ github.sha }}